// Code generated by protoc-gen-go. DO NOT EDIT.
// source: addrgcable.proto

package gcableApi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestGcableTrouble struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestGcableTrouble) Reset()         { *m = RequestGcableTrouble{} }
func (m *RequestGcableTrouble) String() string { return proto.CompactTextString(m) }
func (*RequestGcableTrouble) ProtoMessage()    {}
func (*RequestGcableTrouble) Descriptor() ([]byte, []int) {
	return fileDescriptor_530b70210ce767df, []int{0}
}

func (m *RequestGcableTrouble) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGcableTrouble.Unmarshal(m, b)
}
func (m *RequestGcableTrouble) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGcableTrouble.Marshal(b, m, deterministic)
}
func (m *RequestGcableTrouble) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGcableTrouble.Merge(m, src)
}
func (m *RequestGcableTrouble) XXX_Size() int {
	return xxx_messageInfo_RequestGcableTrouble.Size(m)
}
func (m *RequestGcableTrouble) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGcableTrouble.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGcableTrouble proto.InternalMessageInfo

func (m *RequestGcableTrouble) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ResponseGcableTrouble struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ShouldGiveMoreDetail bool     `protobuf:"varint,2,opt,name=shouldGiveMoreDetail,proto3" json:"shouldGiveMoreDetail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseGcableTrouble) Reset()         { *m = ResponseGcableTrouble{} }
func (m *ResponseGcableTrouble) String() string { return proto.CompactTextString(m) }
func (*ResponseGcableTrouble) ProtoMessage()    {}
func (*ResponseGcableTrouble) Descriptor() ([]byte, []int) {
	return fileDescriptor_530b70210ce767df, []int{1}
}

func (m *ResponseGcableTrouble) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseGcableTrouble.Unmarshal(m, b)
}
func (m *ResponseGcableTrouble) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseGcableTrouble.Marshal(b, m, deterministic)
}
func (m *ResponseGcableTrouble) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseGcableTrouble.Merge(m, src)
}
func (m *ResponseGcableTrouble) XXX_Size() int {
	return xxx_messageInfo_ResponseGcableTrouble.Size(m)
}
func (m *ResponseGcableTrouble) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseGcableTrouble.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseGcableTrouble proto.InternalMessageInfo

func (m *ResponseGcableTrouble) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ResponseGcableTrouble) GetShouldGiveMoreDetail() bool {
	if m != nil {
		return m.ShouldGiveMoreDetail
	}
	return false
}

func init() {
	proto.RegisterType((*RequestGcableTrouble)(nil), "gcableApi.requestGcableTrouble")
	proto.RegisterType((*ResponseGcableTrouble)(nil), "gcableApi.responseGcableTrouble")
}

func init() { proto.RegisterFile("addrgcable.proto", fileDescriptor_530b70210ce767df) }

var fileDescriptor_530b70210ce767df = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x48, 0x4c, 0x49, 0x29,
	0x4a, 0x4f, 0x4e, 0x4c, 0xca, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0xf0,
	0x1c, 0x0b, 0x32, 0x95, 0x0c, 0xb8, 0x44, 0x8a, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0xdc, 0xc1,
	0x62, 0x21, 0x45, 0xf9, 0xa5, 0x49, 0x39, 0xa9, 0x42, 0x12, 0x5c, 0xec, 0x20, 0x6d, 0xa9, 0xc5,
	0xc5, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30, 0xae, 0x52, 0x32, 0x97, 0x68, 0x51, 0x6a,
	0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0xaa, 0x16, 0x31, 0x2e, 0xb6, 0xe2, 0x92, 0xc4, 0x92, 0x52,
	0x88, 0x0e, 0xd6, 0x20, 0x28, 0x4f, 0xc8, 0x88, 0x4b, 0xa4, 0x38, 0x23, 0xbf, 0x34, 0x27, 0xc5,
	0x3d, 0xb3, 0x2c, 0xd5, 0x37, 0xbf, 0x28, 0xd5, 0x25, 0xb5, 0x24, 0x31, 0x33, 0x47, 0x82, 0x49,
	0x81, 0x51, 0x83, 0x23, 0x08, 0xab, 0x9c, 0x51, 0x0e, 0x17, 0x0f, 0xd4, 0x70, 0x88, 0xd9, 0x31,
	0x5c, 0xa2, 0xce, 0x19, 0xa9, 0xc9, 0xd9, 0x10, 0xae, 0x63, 0x51, 0x6a, 0x22, 0x44, 0x5a, 0x48,
	0x5e, 0x0f, 0xee, 0x17, 0x3d, 0x6c, 0x1e, 0x91, 0x52, 0x40, 0x51, 0x80, 0xc5, 0xdd, 0x4a, 0x0c,
	0x49, 0x6c, 0xe0, 0x60, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xa4, 0xfa, 0x15, 0xb0, 0x2a,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GcableToubleClient is the client API for GcableTouble service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GcableToubleClient interface {
	CheckToubleAreaGcable(ctx context.Context, in *RequestGcableTrouble, opts ...grpc.CallOption) (*ResponseGcableTrouble, error)
}

type gcableToubleClient struct {
	cc *grpc.ClientConn
}

func NewGcableToubleClient(cc *grpc.ClientConn) GcableToubleClient {
	return &gcableToubleClient{cc}
}

func (c *gcableToubleClient) CheckToubleAreaGcable(ctx context.Context, in *RequestGcableTrouble, opts ...grpc.CallOption) (*ResponseGcableTrouble, error) {
	out := new(ResponseGcableTrouble)
	err := c.cc.Invoke(ctx, "/gcableApi.GcableTouble/CheckToubleAreaGcable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GcableToubleServer is the server API for GcableTouble service.
type GcableToubleServer interface {
	CheckToubleAreaGcable(context.Context, *RequestGcableTrouble) (*ResponseGcableTrouble, error)
}

// UnimplementedGcableToubleServer can be embedded to have forward compatible implementations.
type UnimplementedGcableToubleServer struct {
}

func (*UnimplementedGcableToubleServer) CheckToubleAreaGcable(ctx context.Context, req *RequestGcableTrouble) (*ResponseGcableTrouble, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckToubleAreaGcable not implemented")
}

func RegisterGcableToubleServer(s *grpc.Server, srv GcableToubleServer) {
	s.RegisterService(&_GcableTouble_serviceDesc, srv)
}

func _GcableTouble_CheckToubleAreaGcable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGcableTrouble)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GcableToubleServer).CheckToubleAreaGcable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gcableApi.GcableTouble/CheckToubleAreaGcable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GcableToubleServer).CheckToubleAreaGcable(ctx, req.(*RequestGcableTrouble))
	}
	return interceptor(ctx, in, info, handler)
}

var _GcableTouble_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gcableApi.GcableTouble",
	HandlerType: (*GcableToubleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckToubleAreaGcable",
			Handler:    _GcableTouble_CheckToubleAreaGcable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "addrgcable.proto",
}
